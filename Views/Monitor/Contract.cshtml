@section head
{
    <link rel="stylesheet" href="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.12.0/build/styles/ocean.min.css">
    <script src="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.12.0/build/highlight.min.js"></script>
}

@section script
{
    <script>
        Vue.directive('highlightjs', {
            deep: true,
            bind: function(el, binding) {
                // on first bind, highlight all targets
                let targets = el.querySelectorAll('code');
                targets.forEach((target) => {
                    // if a value is directly assigned to the directive, use this
                    // instead of the element content.
                    if (binding.value) {
                        target.textContent = binding.value;
                    }
                    hljs.highlightBlock(target);
                });
            },
            componentUpdated: function(el, binding) {
                // after an update, re-fill the content and then highlight
                let targets = el.querySelectorAll('code');
                targets.forEach((target) => {
                    if (binding.value) {
                        target.textContent = binding.value;
                        hljs.highlightBlock(target);
                    }
                });
            }
        });

        var vm = new Vue({
            el: "#app",
            data: {
                net: M_NET,
                id: '@ViewData["id"]',
                model: {},
                loading: false,
                loading_t: false,
                page: 1,
                transData: {  }
            },
            methods: {
                getData: function () {
                    this.loading = true;
                    $.get(`${M_API}/ContractInfo/${this.id}`)
                        .done(function(data) {
                            vm.model = data;
                            if (data.found)
                                vm.getTransactions(vm.page);
                            else
                                window.location.href = `${M_NET}/monitor/account/${vm.id}`;
                            vm.loading = false;
                        }).fail(function() {
                            vm.notFound = true;
                            vm.loading = false;
                        });
                },
                getTransactions: function (p) {
                    this.loading_t = true;
                    $.get(`${M_API}/ContractTransactions?id=${this.id}&page=${p}`)
                        .done(function (data) {
                            vm.page = data.page;
                            vm.transData = data;
                        })
                        .always(function () {
                            vm.loading_t = false;
                        });
                }
            },
            created: function() {
                this.getData();
            }
        });
    </script>
}

<div class="row justify-content-center" v-show="loading">
    <div class="col-auto">
        <h6>Loading contract info...</h6>
        <div class="progress mt-1">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
    </div>
</div>
<div v-show="!loading">
    <h4 class="main_title padding_top_60 p_bot20">Smart Contract</h4>
    <ul class="nav nav-tabs mt-3 border-bottom-0">
        <li class="nav-item">
            <a class="nav-link active text-info">Contract Info</a>
        </li>
    </ul>
    <div class="tab-content table-responsive">
        <table class="table table-sm border-left border-bottom">
            <thead>
                <tr></tr>
            </thead>
            <tbody>
                <tr>
                    <td>Address:</td>
                    <td>{{id}}</td>
                </tr>
                <tr>
                    <td>Deployer:</td>
                    <td>{{model.deployer}}</td>
                </tr>
                <tr>
                    <td>HashState:</td>
                    <td>{{model.hashState}}</td>
                </tr>
                <tr>
                    <td>Byte code length:</td>
                    <td>{{model.byteCodeLen}}</td>
                </tr>
            </tbody>
        </table>
    </div>

    <h4 class="my-3">Source code:</h4>
    <div class="px-3">
        <pre v-highlightjs="model.sourceCode"><code class="java"></code></pre>
    </div>

    <h4 class="my-3">List of transactions</h4>
    <div class="mt-4">Transactions {{transData.numStr}}</div>
    <pb :page="page" :getfn="getTransactions" :next="transData.haveNextPage"></pb>

    <transactions :network="net" :source="transData.transactions"></transactions>

    <div class="row justify-content-center">
        <div class="col-auto">
            <div class="progress mt-1" v-show="loading_t">
                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>
    </div>
    <pb :page="page" :getfn="getTransactions" :next="transData.haveNextPage"></pb>
</div>
