
@section script
{
    <script>

        var vm = new Vue({
            el: "#app",
            data: {
                net: M_NET,
                page: 1,
                accId: "@ViewData["accId"]",
                activeTab: "transactions",
                balance: "",
                tokens: {},
                transData: { transactions: [], haveNextPage: false },
                numStr: '',
                loading: false,
                loading_t: false
            },
            methods: {
                getBalance: function() {
                    this.loading = true;
                    $.get(`${M_API}/Balance?id=${this.accId}`)
                        .done(function(data) {
                            vm.balance = data;
                            vm.getTokensBalance();
                        });
                },
                getTokensBalance: function() {
                    $.get(`${M_API}/AccountTokens?id=${this.accId}`)
                        .done(function(data) {
                            vm.tokens = data;
                            vm.getTransactions(vm.page);
                        }).always(function() {
                            vm.loading = false;
                        });
                },
                getTransactions: function(p) {
                    this.loading_t = true;
                    $.get(`${M_API}/AccountTransactions?id=${this.accId}&page=${p}&limit=${localStorage.limit}`)
                        .done(function(data) {
                            vm.page = data.page;
                            vm.transData = data;
                            if (data.transactions.length > 0)
                                vm.getTime(0);
                        })
                        .always(function() {
                            vm.loading_t = false;
                        });
                },

                getTime: function(i) {
                    $.get(`${M_API}/GetTransactionTime?id=${this.transData.transactions[i].id}`)
                        .done(function(data) {
                            vm.transData.transactions[i++].time = data;
                            if (i < vm.transData.transactions.length)
                                vm.getTime(i);
                        });
                }
            },
            created: function() {
                this.getBalance();
            }
        });

    </script>
}

<nav aria-label="breadcrumb mt-2">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a :href="net + '/index'">Home</a></li>
        <li class="breadcrumb-item"><a :href="net + '/accounts'">Accounts</a></li>
        <li class="breadcrumb-item active" aria-current="page">Account info</li>
    </ol>
</nav>

<div class="row justify-content-center" v-show="loading">
    <div class="col-auto">
        <h6>Loading account balance...</h6>
        <div class="progress mt-1">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
    </div>
</div>

<div v-show="!loading">
    <h4 class="main_title padding_top_60 p_bot20">Account <small>{{accId}}</small></h4>
    <ul class="nav nav-tabs mt-3 border-bottom-0">
        <li class="nav-item">
            <a class="nav-link active text-info">Information</a>
        </li>
    </ul>
    <div class="tab-content table-responsive">
        <table class="table table-sm border-left border-bottom">
            <thead>
                <tr></tr>
            </thead>
            <tbody>
                <tr>
                    <td>Account: </td>
                    <td>{{accId}}</td>
                </tr>
                <tr>
                    <td>Balance CS: </td>
                    <td>{{balance}}</td>
                </tr>
                <tr v-for="item in tokens.balances">
                    <td>Balance <a :href="net + '/token/' + item.address">{{item.code}}</a>: </td>
                    <td>{{item.balance}}</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="row my-3">
        <div class="col-12">
            <ul class="nav nav-tabs my-1">
                <li class="nav-item" v-bind:class="{bgActiveTab:activeTab === 'transactions'}">
                    <a class="nav-link" v-bind:class="{active: activeTab === 'transactions'}" href="#" v-on:click="activeTab = 'transactions'">Transactions</a>
                </li>
                <li v-for="item in tokens.balances" class="nav-item" v-bind:class="{bgActiveTab:activeTab === item.address}">
                    <a class="nav-link" v-bind:class="{active: activeTab === item.address}" href="#" v-on:click="activeTab = item.address; ">{{item.code}} Transfers</a>
                </li>
            </ul>
            <div v-show="activeTab === 'transactions'">

                <pb :page="page" :getfn="getTransactions" :next="transData.haveNextPage" :last="transData.lastPage" top>Transactions {{transData.numStr}}</pb>

                <transactions v-show="!loading_t" :network="net" :source="transData.transactions"></transactions>

                <div class="row justify-content-center">
                    <div class="col-auto">
                        <div class="progress mt-1" v-show="loading_t">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    </div>
                </div>
                <pb :page="page" :getfn="getTransactions" :next="transData.haveNextPage" :last="transData.lastPage"></pb>

            </div>

            <div v-for="item in tokens.balances" v-show="activeTab === item.address">
                
                <p>{{item.code}}</p>

            </div>

        </div>
    </div>
</div>
