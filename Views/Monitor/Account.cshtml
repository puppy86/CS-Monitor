
@section script
{
    <script>
        var initTokens = (localStorage["tokens"]) ? JSON.parse(localStorage["tokens"]) : [];

        var vm = new Vue({
            el: "#app",
            data: {
                net: M_NET,
                page: 1,
                accId: "@ViewData["accId"]",
                balance: "",
                transData: { transactions: [], haveNextPage: false },
                numStr: '',
                loading: false,
                loading_t: false,
                token: "",
                tokens: initTokens,
                tokenAmounts: { tokens: [] }
            },
            methods: {
                getBalance: function () {
                    this.loading = true;
                    $.get(`${M_API}/Balance?id=${this.accId}`)
                        .done(function(data) {
                            vm.balance = data;
                            vm.getTransactions(vm.page);
                        }).always(function () {
                            vm.loading = false;
                        });
                },
                getTransactions: function(p) {
                    this.loading_t = true;
                    $.get(`${M_API}/AccountTransactions?id=${this.accId}&page=${p}`)
                        .done(function(data) {
                            vm.page = data.page;
                            vm.transData = data;
                            if (data.transactions.length > 0)
                                vm.getTime(0);
                        })
                        .always(function() {
                            vm.loading_t = false;
                        });
                },

                getTime: function(i) {
                    $.get(`${M_API}/GetTransactionTime?id=${this.transData.transactions[i].id}`)
                        .done(function(data) {
                            vm.transData.transactions[i++].time = data;
                            if (i < vm.transData.transactions.length)
                                vm.getTime(i);
                        });
                },

                getTokens: function() {
                    $.get(`${M_API}/AccountTokens?id=${this.accId}&tokens=${this.tokens.join()}`)
                        .done(function(data) {
                            vm.tokenAmounts = data;
                        });
                },

                addToken: function() {
                    if (this.token && this.tokens.indexOf(this.token) < 0) {
                        this.tokens.push(this.token);
                        localStorage["tokens"] = JSON.stringify(this.tokens);
                    }
                    this.token = "";
                    this.getTokens();
                },

                delToken: function() {
                    const idx = this.tokens.indexOf(this.token);
                    if (idx > -1) {
                        this.tokens.splice(idx, 1);
                        localStorage["tokens"] = JSON.stringify(this.tokens);
                    }
                    this.token = "";
                    this.getTokens();
                }
            },
            created: function() {
                this.getBalance();
            }
        });

    </script>
}


<div class="row justify-content-center" v-show="loading">
    <div class="col-auto">
        <h6>Loading account balance...</h6>
        <div class="progress mt-1">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
    </div>
</div>

<div v-show="!loading">
    <h4 class="main_title padding_top_60 p_bot20">Account {{accId}}</h4>
    <ul class="nav nav-tabs mt-3 border-bottom-0">
        <li class="nav-item">
            <a class="nav-link active text-info">Information</a>
        </li>
    </ul>
    <div class="tab-content table-responsive">
        <table class="table table-sm border-left border-bottom">
            <thead>
                <tr></tr>
            </thead>
            <tbody>
                <tr>
                    <td>Account: </td>
                    <td>{{accId}}</td>
                </tr>
                <tr>
                    <td>Balance CS: </td>
                    <td>{{balance}}</td>
                </tr>
                <tr v-show="false" v-for="item in tokenAmounts.tokens">
                    <td>{{item.token}}</td>
                    <td>{{item.value}}</td>
                </tr>
                <tr v-show="false">
                    <td>Token: </td>
                    <td>
                        <div>
                            <input type="text" v-model="token" class="input_token" />
                            <a href="#" v-on:click="addToken" style="display: inline; margin-left: 5px">Add</a>
                            <a href="#" v-on:click="delToken" style="display: inline; margin-left: 5px">Del</a>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <h4 class="my-3">List of transactions</h4>
    <div class="mt-4">Transactions {{transData.numStr}}</div>
    <pb :page="page" :getfn="getTransactions" :next="transData.haveNextPage"></pb>

    <transactions v-show="!loading_t" :network="net" :source="transData.transactions"></transactions>

    <div class="row justify-content-center">
        <div class="col-auto">
            <div class="progress mt-1" v-show="loading_t">
                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>
    </div>
    <pb :page="page" :getfn="getTransactions" :next="transData.haveNextPage"></pb>
</div>
